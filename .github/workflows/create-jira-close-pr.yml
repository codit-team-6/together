name: CI
on:
  push:
    branches:
      - develop
      - "feat/**"
    # paths:
    #   - "**.js"
    #   - "**.jsx"
    #   - "**.ts"
    #   - "**.tsx"


jobs:
  run-test:
    name: Run Test
    runs-on: ubuntu-latest
    steps:
      - name: Downloads Codes
        uses: actions/checkout@v4

      - name: Install Deps
        run: npm install

      - name: Run Test
        run: npm run test

      - name: Run Build
        run: npm run build

  create-pr:
    needs: run-test
    name: Create PR
    runs-on: ubuntu-latest
    steps:
      - name: Download Codes
        uses: actions/checkout@v4

      # 브랜치 이름에서 Jira 이슈 번호 추출 (예: feat/#SCURM-1-login)
      - name: Extract Jira Issue
        id: extract-jira
        run: |
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          JIRA_ISSUE=$(echo $BRANCH_NAME | grep -oE '#[A-Z]+-[0-9]+' | sed 's/^#//' || echo "")
          echo "jira_issue=$JIRA_ISSUE" >> $GITHUB_OUTPUT

      # 커밋 메시지에서 "SCRUM-XX: " 패턴 제거
      - name: Extract Clean Commit Message
        id: clean-commit
        run: |
          COMMIT_MSG="${{ github.event.head_commit.message }}"
          CLEAN_COMMIT_MSG=$(echo "$COMMIT_MSG" | sed -E 's/[A-Z]+-[0-9]+:\s*//')
          echo "commit_message=$CLEAN_COMMIT_MSG" >> $GITHUB_OUTPUT


      - name: Create PR Template
        id: pr-template
        run: |
          PR_BODY=$(cat .github/PULL_REQUEST_TEMPLATE.md)
          ls -a
          echo "pr_body<<EOF" >> $GITHUB_OUTPUT
          echo "$PR_BODY" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create PR
        uses: peter-evans/create-pull-request@v7
        with:
          title: "${{ steps.extract-jira.outputs.jira_issue }} #close ${{ steps.clean-commit.outputs.commit_message }}"
          body: ${{ steps.pr-template.outputs.pr_body }}
          base: main
          branch: ${{github.ref}}
          token: ${{ secrets.ACCESS_TOKEN_FOR_CI }}